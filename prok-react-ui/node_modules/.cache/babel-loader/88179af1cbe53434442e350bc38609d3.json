{"ast":null,"code":"var _jsxFileName = \"/Users/awe/proj/software/work/intraedge/projects/prok/prok-react-ui/src/App.js\";\nimport React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Match0002 from \"./components/Match/Match0002\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Matches from \"./components/Match/Matches\";\nimport ReadyState from \"./store/ReadyState\";\nimport MatchContext from \"./store/match-context\";\nimport MainNavigation from \"./components/Routing/MainNavigation\";\nexport default function App(props) {\n  var context = useContext(MatchContext); // console.log(\"context\", context);\n\n  function getCook(cookiename) {\n    // Get name followed by anything except a semicolon\n    var cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie); // Return everything after the equal sign, or an empty string if the cookie name not found\n\n    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n  } //Sample usage\n\n\n  var cookieValue = getCook(\"sid\"); // console.log(\"cookieValue\", cookieValue);\n\n  return React.createElement(ReadyState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(MainNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/match\",\n    component: Match0002,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/matches\",\n    component: Matches,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sign-in\",\n    component: Login,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sign-up\",\n    component: Register,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: context.createNewMatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Create New Match\")))));\n}","map":{"version":3,"sources":["/Users/awe/proj/software/work/intraedge/projects/prok/prok-react-ui/src/App.js"],"names":["React","useContext","BrowserRouter","Router","Route","Switch","Match0002","Login","Register","Matches","ReadyState","MatchContext","MainNavigation","App","props","context","getCook","cookiename","cookiestring","RegExp","exec","document","cookie","decodeURIComponent","toString","replace","cookieValue","createNewMatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,MAAMC,OAAO,GAAGd,UAAU,CAACU,YAAD,CAA1B,CADiC,CAEjC;;AACA,WAASK,OAAT,CAAiBC,UAAjB,EAA6B;AAC3B;AACA,QAAIC,YAAY,GAAGC,MAAM,CAAC,KAAKF,UAAL,GAAkB,OAAnB,CAAN,CAAkCG,IAAlC,CAAuCC,QAAQ,CAACC,MAAhD,CAAnB,CAF2B,CAG3B;;AACA,WAAOC,kBAAkB,CACvB,CAAC,CAACL,YAAF,GAAiBA,YAAY,CAACM,QAAb,GAAwBC,OAAxB,CAAgC,SAAhC,EAA2C,EAA3C,CAAjB,GAAkE,EAD3C,CAAzB;AAGD,GAVgC,CAYjC;;;AACA,MAAIC,WAAW,GAAGV,OAAO,CAAC,KAAD,CAAzB,CAbiC,CAcjC;;AACA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEV,SAAhC;AAA2C,IAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEG,OAAlC;AAA2C,IAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEF,KAAlC;AAAyC,IAAA,KAAK,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEC,QAAlC;AAA4C,IAAA,KAAK,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEO,OAAO,CAACY,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CANF,CAFF,CADF,CADF;AAiBD","sourcesContent":["import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Match0002 from \"./components/Match/Match0002\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Matches from \"./components/Match/Matches\";\nimport ReadyState from \"./store/ReadyState\";\nimport MatchContext from \"./store/match-context\";\nimport MainNavigation from \"./components/Routing/MainNavigation\";\n\nexport default function App(props) {\n  const context = useContext(MatchContext);\n  // console.log(\"context\", context);\n  function getCook(cookiename) {\n    // Get name followed by anything except a semicolon\n    var cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie);\n    // Return everything after the equal sign, or an empty string if the cookie name not found\n    return decodeURIComponent(\n      !!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\"\n    );\n  }\n\n  //Sample usage\n  var cookieValue = getCook(\"sid\");\n  // console.log(\"cookieValue\", cookieValue);\n  return (\n    <ReadyState>\n      <Router>\n        <MainNavigation />\n        <Switch>\n          <Route path=\"/\" exact />\n          <Route path=\"/match\" component={Match0002} exact />\n          <Route path=\"/matches\" component={Matches} exact />\n          <Route path=\"/sign-in\" component={Login} exact />\n          <Route path=\"/sign-up\" component={Register} exact />\n          <div>\n            <button onClick={context.createNewMatch}>Create New Match</button>\n          </div>\n        </Switch>\n      </Router>\n    </ReadyState>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}