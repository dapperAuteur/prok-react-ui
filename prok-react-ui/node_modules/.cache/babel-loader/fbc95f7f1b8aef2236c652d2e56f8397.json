{"ast":null,"code":"import _toConsumableArray from \"/Users/awe/proj/software/work/intraedge/projects/prok/prok-react-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/awe/proj/software/work/intraedge/projects/prok/prok-react-ui/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { UPDATE_MATCH, INCREMENT_HOME_SCORE, INCREMENT_AWAY_SCORE, INCREMENT_BALLS, INCREMENT_STRIKES, INCREMENT_FOULS, INCREMENT_OUTS, INCREMENT_CURRENT_INNING, CREATE_NEW_MATCH, RESET_COUNT } from \"./actionTypes\";\nimport { matchInitialState } from \"./DefaultStates\";\n\nvar incrementAwayScoreReducer = function incrementAwayScoreReducer(state) {\n  var updatedMatch = state.match;\n  updatedMatch.awayTeamScore++;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar incrementHomeScoreReducer = function incrementHomeScoreReducer(state) {\n  console.log(\"state\", state);\n  var updatedMatch = state.match;\n  updatedMatch.homeTeamScore++;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar incrementBalls = function incrementBalls(state) {\n  var updatedMatch = state.match;\n  updatedMatch.balls++;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar incrementStrikes = function incrementStrikes(state) {\n  var updatedMatch = state.match;\n  updatedMatch.strikes++;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar incrementFouls = function incrementFouls(state) {\n  var updatedMatch = state.match;\n  updatedMatch.fouls++;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar incrementOuts = function incrementOuts(state) {\n  var updatedMatch = state.match;\n  updatedMatch.outs++;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar incrementCurrentInning = function incrementCurrentInning(state) {\n  var updatedMatch = state.match;\n  updatedMatch.currentInning++;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar resetCount = function resetCount(state) {\n  var updatedMatch = state.match;\n  updatedMatch.balls = 0;\n  updatedMatch.strikes = 0;\n  updatedMatch.fouls = 0;\n  return _objectSpread({}, state, {\n    match: updatedMatch\n  });\n};\n\nvar createNewMatch = function createNewMatch(state) {\n  return _objectSpread({}, state, {\n    match: matchInitialState.match\n  });\n};\n\nvar updateMatch = function updateMatch(match, state) {\n  var updatedMatch = _toConsumableArray(state.match);\n\n  updatedMatch = match;\n  var updatedMatches = state.matches.map(function (m) {\n    return m.scoreKeeper === match.scoreKeeper ? _objectSpread({}, m, match) : m;\n  });\n  return _objectSpread({}, state, {\n    match: updatedMatch,\n    matches: updatedMatches\n  });\n};\n\nexport default function matchReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : matchInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_HOME_SCORE:\n      return incrementHomeScoreReducer(state);\n\n    case INCREMENT_AWAY_SCORE:\n      return incrementAwayScoreReducer(state);\n\n    case UPDATE_MATCH:\n      return updateMatch(action.match, state);\n\n    case INCREMENT_BALLS:\n      return incrementBalls(state);\n\n    case INCREMENT_STRIKES:\n      return incrementStrikes(state);\n\n    case INCREMENT_FOULS:\n      return incrementFouls(state);\n\n    case INCREMENT_OUTS:\n      return incrementOuts(state);\n\n    case RESET_COUNT:\n      return resetCount(state);\n\n    case CREATE_NEW_MATCH:\n      return createNewMatch(state);\n\n    case INCREMENT_CURRENT_INNING:\n      return incrementCurrentInning(state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/awe/proj/software/work/intraedge/projects/prok/prok-react-ui/src/store/matchReducer.js"],"names":["UPDATE_MATCH","INCREMENT_HOME_SCORE","INCREMENT_AWAY_SCORE","INCREMENT_BALLS","INCREMENT_STRIKES","INCREMENT_FOULS","INCREMENT_OUTS","INCREMENT_CURRENT_INNING","CREATE_NEW_MATCH","RESET_COUNT","matchInitialState","incrementAwayScoreReducer","state","updatedMatch","match","awayTeamScore","incrementHomeScoreReducer","console","log","homeTeamScore","incrementBalls","balls","incrementStrikes","strikes","incrementFouls","fouls","incrementOuts","outs","incrementCurrentInning","currentInning","resetCount","createNewMatch","updateMatch","updatedMatches","matches","map","m","scoreKeeper","matchReducer","action","type"],"mappings":"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","sourcesContent":["import {\n  UPDATE_MATCH,\n  INCREMENT_HOME_SCORE,\n  INCREMENT_AWAY_SCORE,\n  INCREMENT_BALLS,\n  INCREMENT_STRIKES,\n  INCREMENT_FOULS,\n  INCREMENT_OUTS,\n  INCREMENT_CURRENT_INNING,\n  CREATE_NEW_MATCH,\n  RESET_COUNT\n} from \"./actionTypes\";\nimport { matchInitialState } from \"./DefaultStates\";\nconst incrementAwayScoreReducer = state => {\n  let updatedMatch = state.match;\n  updatedMatch.awayTeamScore++;\n  return { ...state, match: updatedMatch };\n};\nconst incrementHomeScoreReducer = state => {\n  console.log(\"state\", state);\n  let updatedMatch = state.match;\n  updatedMatch.homeTeamScore++;\n  return { ...state, match: updatedMatch };\n};\nconst incrementBalls = state => {\n  let updatedMatch = state.match;\n  updatedMatch.balls++;\n  return { ...state, match: updatedMatch };\n};\nconst incrementStrikes = state => {\n  let updatedMatch = state.match;\n  updatedMatch.strikes++;\n  return { ...state, match: updatedMatch };\n};\nconst incrementFouls = state => {\n  let updatedMatch = state.match;\n  updatedMatch.fouls++;\n  return { ...state, match: updatedMatch };\n};\nconst incrementOuts = state => {\n  let updatedMatch = state.match;\n  updatedMatch.outs++;\n  return { ...state, match: updatedMatch };\n};\nconst incrementCurrentInning = state => {\n  let updatedMatch = state.match;\n  updatedMatch.currentInning++;\n  return { ...state, match: updatedMatch };\n};\nconst resetCount = state => {\n  let updatedMatch = state.match;\n  updatedMatch.balls = 0;\n  updatedMatch.strikes = 0;\n  updatedMatch.fouls = 0;\n  return { ...state, match: updatedMatch };\n};\nconst createNewMatch = state => {\n  return { ...state, match: matchInitialState.match };\n};\nconst updateMatch = (match, state) => {\n  let updatedMatch = [...state.match];\n  updatedMatch = match;\n  const updatedMatches = state.matches.map(m =>\n    m.scoreKeeper === match.scoreKeeper ? { ...m, ...match } : m\n  );\n  return { ...state, match: updatedMatch, matches: updatedMatches };\n};\n\nexport default function matchReducer(state = matchInitialState, action) {\n  switch (action.type) {\n    case INCREMENT_HOME_SCORE:\n      return incrementHomeScoreReducer(state);\n    case INCREMENT_AWAY_SCORE:\n      return incrementAwayScoreReducer(state);\n    case UPDATE_MATCH:\n      return updateMatch(action.match, state);\n    case INCREMENT_BALLS:\n      return incrementBalls(state);\n    case INCREMENT_STRIKES:\n      return incrementStrikes(state);\n    case INCREMENT_FOULS:\n      return incrementFouls(state);\n    case INCREMENT_OUTS:\n      return incrementOuts(state);\n    case RESET_COUNT:\n      return resetCount(state);\n    case CREATE_NEW_MATCH:\n      return createNewMatch(state);\n    case INCREMENT_CURRENT_INNING:\n      return incrementCurrentInning(state);\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}